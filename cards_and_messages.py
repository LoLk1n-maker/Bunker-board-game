import sqlite3

def load_cards_from_db():
    conn = sqlite3.connect('cards.db')
    cursor = conn.cursor()

    data = {}
    table_names = ['baggage', 'biology', 'health', 'special', 'job', 'facts', 'hobby', 'catastrophe', 'bunkers']

    for table_name in table_names:
        cursor.execute(f"SELECT card_name FROM {table_name}")
        cards = [row[0] for row in cursor.fetchall()]
        data[table_name] = cards

    conn.close()
    return data

card_data = load_cards_from_db()

#—Ñ–æ—Ä–º–∏—Ä—É–µ–º —Å–ø–∏—Å–∫–∏ –∫–∞—Ä—Ç
baggage = card_data['baggage']
biology = card_data['biology']
health = card_data['health']
special = card_data['special']
job = card_data['job']
facts = card_data['facts']
hobby = card_data['hobby']
catastrophe = card_data['catastrophe']
bunkers = card_data['bunkers']


def load_messages_from_database():
    filename = "messages.db"
    with sqlite3.connect(filename) as conn:
        cursor = conn.cursor()
        cursor.execute("SELECT message_name, message_text FROM messages")
        messages = cursor.fetchall()

    global_vars = {}
    for message_name, message_text in messages:
        new_message_text = message_text.replace(r'\n', '\n')#—Ç –∫ –∏–∑ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö —Å—Ç—Ä–æ–∫–∞ –∏–¥–µ—Ç —Å—ã—Ä–∞—è
        global_vars[message_name] = new_message_text

    return global_vars


messages = load_messages_from_database()

# —Ñ–æ—Ä–º–∏—Ä—É–µ–º —Å–æ–æ–±—â–µ–Ω–∏—è
without_loosers_message = messages["without_loosers_message"]
hello_message = messages['hello_message']
zero_voting_message = messages['zero_voting_message']
voting_message = messages['voting_message']
creating_game_message = messages['creating_game_message']
receiving_cards_message = messages['receiving_cards_message']
catastrophe_message = messages['catastrophe_message']
wrong_count_of_players_message = messages['wrong_count_of_players_message']

already_in_lobby_message = "–¢—ã —É–∂–µ –≤ –ª–æ–±–±–∏ü§°ü§°ü§°"
round_message = "–†–∞—É–Ω–¥—ã:\n" \
                "–ù–∞–∂–∏–º–∞—Ç—å –≤ –∫–æ–Ω—Ü–µ —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É—é—â–µ–≥–æ —Ä–∞—É–Ω–¥–∞‚ñ∂"
without_lobby_message = "–õ–æ–±–±–∏ –µ—â–µ –Ω–µ—Ç, –µ–≥–æ –Ω—É–∂–Ω–æ —Å–æ–∑–¥–∞—Ç—å.\n" \
                        "–ö–æ–º–∞–Ω–¥—É —è –¥–∞–º: /new_game\n" \
                        "–î—Ä—É–∑–µ–π. —è. –Ω–µ. –¥–∞–º"

def get_not_admin_message(admin):
    return f"–ß—Ç–æ–±—ã –Ω–∞—á–∞—Ç—å –∏–≥—Ä—É —Ç—ã –¥–æ–ª–∂–µ–Ω –±—ã—Ç—å –∞–¥–º–∏–Ω–æ–º\nüëë" \
           f"–ê–¥–º–∏–Ω —Å–µ–π—á–∞—Å - {admin}"

def get_without_vote_message(this_round):
    return f"–í {this_round}–º —Ä–∞—É–Ω–¥–µ –≥–æ–ª–æ—Å–æ–≤–∞–Ω–∏—è –Ω–µ –±—É–¥–µ—Ç\n" \
           f"–ù–∞–¥–µ–∂–¥–∞ –µ—Å—Ç—å"

def get_with_looser_message(kicked_player):
    return f"{kicked_player} —Å–æ—á–ª–∏ –Ω–µ–¥–æ—Å—Ç–æ–π–Ω—ã–º –±—É–Ω–∫–µ—Ä–∞:3\n" \
           f"–û—Ç–ø—Ä–∞–≤–ª—è–π—Å—è –≤–æ—Å–≤–æ—è—Å–∏"

def get_results_message(number_of_votes):
    results_list = ''
    for member in number_of_votes:
        results_list += member + " " + str(number_of_votes[member]) + " " + "–≥–æ–ª–æ—Å–æ–≤\n"
    return results_list

def get_str_of_members(members, admin):

    admin_str = admin + "üëë\n"
    del members[admin]
    members_without_admin = members

    return admin_str + "\n".join(members_without_admin)

def get_joining_message(lobby_members, admin):
    str_of_members = get_str_of_members(lobby_members.copy(), admin)
    return f"–ü—Ä–∏–≤–µ—Ç—Å—Ç–≤—É—é —Ç–µ–±—è –≤ –ë—É–Ω–∫–µ—Ä–µ!!!!\n" \
           f"–õ–æ–±–±–∏:" \
           f"\n{str_of_members}"

